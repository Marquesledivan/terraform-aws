{
    "version": 3,
    "terraform_version": "0.11.7",
    "serial": 2,
    "lineage": "2f6179b9-1f25-843e-de98-532f9f50ea49",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {
                "master": {
                    "sensitive": false,
                    "type": "string",
                    "value": "18.228.255.140"
                },
                "nodes01": {
                    "sensitive": false,
                    "type": "string",
                    "value": "18.231.191.181"
                },
                "nodes02": {
                    "sensitive": false,
                    "type": "string",
                    "value": "18.231.177.56"
                }
            },
            "resources": {
                "aws_eip.master": {
                    "type": "aws_eip",
                    "depends_on": [],
                    "primary": {
                        "id": "eipalloc-0fbb6f682726b2d4c",
                        "attributes": {
                            "association_id": "",
                            "domain": "vpc",
                            "id": "eipalloc-0fbb6f682726b2d4c",
                            "instance": "",
                            "network_interface": "",
                            "private_ip": "",
                            "public_dns": "ec2-18-228-255-140.sa-east-1.compute.amazonaws.com",
                            "public_ip": "18.228.255.140",
                            "public_ipv4_pool": "amazon",
                            "tags.%": "0",
                            "vpc": "true"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "delete": 180000000000,
                                "read": 900000000000,
                                "update": 300000000000
                            }
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_eip_association.master_assoc": {
                    "type": "aws_eip_association",
                    "depends_on": [
                        "aws_eip.master",
                        "aws_instance.master"
                    ],
                    "primary": {
                        "id": "eipassoc-05467d5418ba6d60f",
                        "attributes": {
                            "allocation_id": "eipalloc-0fbb6f682726b2d4c",
                            "id": "eipassoc-05467d5418ba6d60f",
                            "instance_id": "i-0cf857d7b96ec4f35",
                            "network_interface_id": "eni-0eed59f24c3d462a2",
                            "private_ip_address": "172.31.31.90",
                            "public_ip": "18.228.255.140"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.master": {
                    "type": "aws_instance",
                    "depends_on": [
                        "data.template_cloudinit_config.master_cloud_init"
                    ],
                    "primary": {
                        "id": "i-0cf857d7b96ec4f35",
                        "attributes": {
                            "ami": "ami-0be3df9b8bb0a5f23",
                            "arn": "arn:aws:ec2:sa-east-1:485540557572:instance/i-0cf857d7b96ec4f35",
                            "associate_public_ip_address": "true",
                            "availability_zone": "sa-east-1c",
                            "cpu_core_count": "4",
                            "cpu_threads_per_core": "1",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "",
                            "id": "i-0cf857d7b96ec4f35",
                            "instance_state": "running",
                            "instance_type": "t2.xlarge",
                            "ipv6_address_count": "0",
                            "ipv6_addresses.#": "0",
                            "key_name": "docker.pem",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-0eed59f24c3d462a2",
                            "private_dns": "ip-172-31-31-90.sa-east-1.compute.internal",
                            "private_ip": "172.31.31.90",
                            "public_dns": "ec2-18-231-146-255.sa-east-1.compute.amazonaws.com",
                            "public_ip": "18.231.146.255",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-0a362d28ea4fcb8d9",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "1",
                            "security_groups.261079318": "launch-wizard-2",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-865004de",
                            "tags.%": "1",
                            "tags.Name": "Master",
                            "tenancy": "default",
                            "user_data": "158c4c69cfd984b604a8327b8c688fd21f54da04",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "1",
                            "vpc_security_group_ids.296084123": "sg-017f224a4b08c2d14"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.nodes01": {
                    "type": "aws_instance",
                    "depends_on": [
                        "data.template_cloudinit_config.node_cloud_init"
                    ],
                    "primary": {
                        "id": "i-0bf00b24e7f3cb212",
                        "attributes": {
                            "ami": "ami-0be3df9b8bb0a5f23",
                            "arn": "arn:aws:ec2:sa-east-1:485540557572:instance/i-0bf00b24e7f3cb212",
                            "associate_public_ip_address": "true",
                            "availability_zone": "sa-east-1c",
                            "cpu_core_count": "4",
                            "cpu_threads_per_core": "1",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "",
                            "id": "i-0bf00b24e7f3cb212",
                            "instance_state": "running",
                            "instance_type": "t2.xlarge",
                            "ipv6_address_count": "0",
                            "ipv6_addresses.#": "0",
                            "key_name": "docker.pem",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-091d4b3993dd33cf4",
                            "private_dns": "ip-172-31-22-104.sa-east-1.compute.internal",
                            "private_ip": "172.31.22.104",
                            "public_dns": "ec2-18-231-191-181.sa-east-1.compute.amazonaws.com",
                            "public_ip": "18.231.191.181",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-082ef9028eca3250d",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "1",
                            "security_groups.261079318": "launch-wizard-2",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-865004de",
                            "tags.%": "1",
                            "tags.Name": "Nodes 01",
                            "tenancy": "default",
                            "user_data": "0b6b292ada97698cff71d781810839467519f8b1",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "1",
                            "vpc_security_group_ids.296084123": "sg-017f224a4b08c2d14"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.nodes02": {
                    "type": "aws_instance",
                    "depends_on": [
                        "data.template_file.init_node"
                    ],
                    "primary": {
                        "id": "i-01942b16b1590f2dc",
                        "attributes": {
                            "ami": "ami-0be3df9b8bb0a5f23",
                            "arn": "arn:aws:ec2:sa-east-1:485540557572:instance/i-01942b16b1590f2dc",
                            "associate_public_ip_address": "true",
                            "availability_zone": "sa-east-1c",
                            "cpu_core_count": "4",
                            "cpu_threads_per_core": "1",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "",
                            "id": "i-01942b16b1590f2dc",
                            "instance_state": "running",
                            "instance_type": "t2.xlarge",
                            "ipv6_address_count": "0",
                            "ipv6_addresses.#": "0",
                            "key_name": "docker.pem",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-02edf781ce253f7bb",
                            "private_dns": "ip-172-31-18-24.sa-east-1.compute.internal",
                            "private_ip": "172.31.18.24",
                            "public_dns": "ec2-18-231-177-56.sa-east-1.compute.amazonaws.com",
                            "public_ip": "18.231.177.56",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-0bd962038a3c76c2b",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "1",
                            "security_groups.261079318": "launch-wizard-2",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-865004de",
                            "tags.%": "1",
                            "tags.Name": "Nodes 02",
                            "tenancy": "default",
                            "user_data": "0a32973045574e04fcf63e00a731922ec62fff65",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "1",
                            "vpc_security_group_ids.296084123": "sg-017f224a4b08c2d14"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "data.template_cloudinit_config.master_cloud_init": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.cloud_init_config",
                        "data.template_file.init_master"
                    ],
                    "primary": {
                        "id": "4094800377",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "4094800377",
                            "part.#": "2",
                            "part.0.content": "#cloud-config\n#\nwrite_files:\n- encoding: gz+b64\n  content: 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\n  owner: root:root\n  path: /tmp/calico.yaml\n  permissions: '0664'",
                            "part.0.content_type": "text/cloud-config",
                            "part.0.filename": "cloud-init-config.yaml",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n\nexec \u0026\u003e /var/log/init-aws-kubernetes-master.log\n\nset -o verbose\nset -o errexit\nset -o pipefail\n\n\nexport KUBEADM_TOKEN=y0r9tf.lq8vupwhgrkfnb0t\n\nexport IP_ADDRESS=$(ifconfig -a eth0 | grep -e \"inet addr\" | awk -F\":\" '{print $2}' | awk -F\" \" '{print $1}')\nexport KUBERNETES_VERSION=\"1.15.0\"\n\n# Set this only after setting the defaults\nset -o nounset\n\n# We needed to match the hostname expected by kubeadm an the hostname used by kubelet\nFULL_HOSTNAME=\"$(curl -s http://169.254.169.254/latest/meta-data/hostname)\"\n\n# Make DNS lowercase\n##DNS_NAME=$(echo \"$DNS_NAME\" | tr 'A-Z' 'a-z')\n\ncurl -fsSL https://get.docker.com | bash\n\napt-get update \u0026\u0026 apt-get install -y apt-transport-https\n\napt-get install bash-completion -y\n\ncurl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\n\necho \"deb http://apt.kubernetes.io/ kubernetes-xenial main\" \u003e /etc/apt/sources.list.d/kubernetes.list\n\napt-get update \u0026\u0026 apt-get install -y kubelet kubeadm kubectl\n\n# Fix kubelet configuration\ncat \u003e /etc/docker/daemon.json \u003c\u003cEOF\n{\n  \"exec-opts\": [\"native.cgroupdriver=systemd\"],\n  \"log-driver\": \"json-file\",\n  \"log-opts\": {\n    \"max-size\": \"100m\"\n  },\n  \"storage-driver\": \"overlay2\"\n}\nEOF\n\nmkdir -p /etc/systemd/system/docker.service.d\n\n# Restart docker.\nsystemctl daemon-reload\nsystemctl restart docker\n\n\n# Set settings needed by Docker\nsysctl net.bridge.bridge-nf-call-iptables=1\nsysctl net.bridge.bridge-nf-call-ip6tables=1\n\n# Initialize the master\ncat \u003e/tmp/kubeadm.yaml \u003c\u003cEOF\n---\napiVersion: kubeadm.k8s.io/v1beta1\nkind: InitConfiguration\nbootstrapTokens:\n- groups:\n  - system:bootstrappers:kubeadm:default-node-token\n  token: $KUBEADM_TOKEN\n  ttl: 0s\n  usages:\n  - signing\n  - authentication\nnodeRegistration:\n  criSocket: /var/run/dockershim.sock\n  name: $FULL_HOSTNAME\n  taints:\n  - effect: NoSchedule\n    key: node-role.kubernetes.io/master\n---\napiVersion: kubeadm.k8s.io/v1beta1\nkind: ClusterConfiguration\napiServer:\n  certSANs:\n  - $IP_ADDRESS\n  timeoutForControlPlane: 5m0s\ncertificatesDir: /etc/kubernetes/pki\nclusterName: kubernetes\ndns:\n  type: CoreDNS\netcd:\n  local:\n    dataDir: /var/lib/etcd\nimageRepository: k8s.gcr.io\nkubernetesVersion: v$KUBERNETES_VERSION\nnetworking:\n  dnsDomain: cluster.local\n  podSubnet: \"\"\n  serviceSubnet: 10.96.0.0/12\n\nEOF\n\nkubeadm reset --force\nkubeadm init --config /tmp/kubeadm.yaml\n\n# Use the local kubectl config for further kubectl operations\n\nexport KUBECONFIG=/etc/kubernetes/admin.conf\n\n# Install calico\nkubectl apply -f /tmp/calico.yaml\n\n# Configure kubectl\nmkdir -p /root/.kube\nsudo cp -i /etc/kubernetes/admin.conf /root/.kube/config\nsudo chown $(id -u):$(id -g) /root/.kube/config\n\nkubectl completion bash \u003e/etc/bash_completion.d/kubectl\n\n# Allow the user to administer the cluster\nkubectl create clusterrolebinding admin-cluster-binding --clusterrole=cluster-admin --user=admin\n\n# Prepare the kubectl config file for download to client (IP address)\nexport KUBECONFIG_OUTPUT=/root/kubeconfig_ip\nkubeadm alpha kubeconfig user \\\n  --client-name admin \\\n  --apiserver-advertise-address $IP_ADDRESS \\\n  \u003e $KUBECONFIG_OUTPUT\nchown $(id -u):$(id -g) $KUBECONFIG_OUTPUT\nchmod 0600 $KUBECONFIG_OUTPUT\n\ncp /root/kubeconfig_ip /root/kubeconfig\nsed -i \"s/server: https:\\/\\/$IP_ADDRESS:6443/server: https:\\/\\/$IP_ADDRESS:6443/g\" /root/kubeconfig\nchown $(id -u):$(id -g) /root/kubeconfig\nchmod 0600 /root/kubeconfig\n",
                            "part.1.content_type": "text/x-shellscript",
                            "part.1.filename": "master.sh",
                            "part.1.merge_type": "",
                            "rendered": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_cloudinit_config.node_cloud_init": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.init_node"
                    ],
                    "primary": {
                        "id": "2375537887",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "2375537887",
                            "part.#": "1",
                            "part.0.content": "#!/bin/bash\n\nexec \u0026\u003e /var/log/init-aws-kubernetes-node.log\n\nset -o verbose\nset -o errexit\nset -o pipefail\n\nexport KUBEADM_TOKEN=y0r9tf.lq8vupwhgrkfnb0t\n\nexport MASTER_IP=172.31.31.90\nexport KUBERNETES_VERSION=\"1.15.0\"\n\n# Set this only after setting the defaults\nset -o nounset\n\n# We to match the hostname expected by kubeadm an the hostname used by kubelet\nFULL_HOSTNAME=\"$(curl -s http://169.254.169.254/latest/meta-data/hostname)\"\n\n# Make DNS lowercase\n##DNS_NAME=$(echo \"$DNS_NAME\" | tr 'A-Z' 'a-z')\n\ncurl -fsSL https://get.docker.com | bash\n\napt-get update \u0026\u0026 apt-get install -y apt-transport-https\n\ncurl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\n\necho \"deb http://apt.kubernetes.io/ kubernetes-xenial main\" \u003e /etc/apt/sources.list.d/kubernetes.list\n\napt-get update \u0026\u0026 apt-get install -y kubelet kubeadm kubectl\n\n# Setup daemon.\ncat \u003e /etc/docker/daemon.json \u003c\u003cEOF\n{\n  \"exec-opts\": [\"native.cgroupdriver=systemd\"],\n  \"log-driver\": \"json-file\",\n  \"log-opts\": {\n    \"max-size\": \"100m\"\n  },\n  \"storage-driver\": \"overlay2\"\n}\nEOF\n\nmkdir -p /etc/systemd/system/docker.service.d\n\n# Restart docker.\nsystemctl daemon-reload\nsystemctl restart docker\n\n\n# Set settings needed by Docker\nsysctl net.bridge.bridge-nf-call-iptables=1\nsysctl net.bridge.bridge-nf-call-ip6tables=1\n\n# Initialize the master\ncat \u003e/tmp/kubeadm.yaml \u003c\u003cEOF\n---\napiVersion: kubeadm.k8s.io/v1beta1\nkind: JoinConfiguration\ndiscovery:\n  bootstrapToken:\n    apiServerEndpoint: $MASTER_IP:6443\n    token: $KUBEADM_TOKEN\n    unsafeSkipCAVerification: true\n  timeout: 5m0s\nnodeRegistration:\n  criSocket: /var/run/dockershim.sock\n  name: $FULL_HOSTNAME\nEOF\n\nkubeadm reset --force\nkubeadm join --config /tmp/kubeadm.yaml",
                            "part.0.content_type": "text/x-shellscript",
                            "part.0.filename": "node.sh",
                            "part.0.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/4xVbW/bNhD+TiD/4aYETQuMkt33qnWBtHGxrI0zxG6HbRgCmjzLrCmSI0+u3bX/faAsuc76pYAAgnfPPbx3vXaW0BKfbT2WUDeGtBeBilpvUD2HuWusEmE7yi4vLsevrt5Pzs+u/8hYuvEPGKJ2toRhPjhiR4zzQ9AR67nPdfQuamqxgkjIZY2WnsNCG7SixlFmncI8LrNvRrMgbFxg4GMrndK2KuHJXNMBoPWYcEPFhsclGhNl0J6O2KWu8Tvnjn8q5toWcxGXjOEGJdx5CcVahMK4qtBWExefIl81cwwWCSNvfTKuYiwiAXewxjB3EfsrhoAbTf3Va48LoU1i9y4QvH3/anx2fnkzu3o7noy2g/CMFrn55+m68Z+WVVgt7HxAe/Tl2XQ2vr65+G00fHI/fzBM37PBIdf1ZDwbT28+jK+nF1eTUTbMh4/yQcbYMUyRgJY6grNmC2JBGCAikbYV0BJB4UI0hmLvq3WNjUjJ9HcEclALkssWunSRUk0ANx4loYL5FlJWhKpB2NuYJn7TGyT25v27dze/XE1nk7PL8Sg7uSubYIBHWBL5siiGj5/l9x89zLuzMIIwUlEjCa4EiaJnvteGdSlWCOeTKRj3CYMUEdnx8flketPSn9xFuXSQnfSSDL4ABTg943+ewqngn0/vMbbzYBGn71onYlkUFVKunFxhyKWr4QvsmkJ44hUSNF4JQrhzB3qJtpGEMcC3rYhSa6ay8JaxfyPuH/BCrkSFMZfGNSqvnKsMprcK4alQTqaTr3CbV76CL9DdQCgFnLFdWArnfdqEp/xbY+baFXDQpxu0WhiohbYZvIQCqeUvomuCxJgbHSlXxQFBkvxgvF1l9x2QTkmma7rGgxJYO5szKah/fJfbotN8jM7CixfjqzfsXwaQpdnjzlPMSvgrs4L0GnNZBdd4FfQawyhuI2Gtsr9/TnjjKr5TZCVkiY2nvZHtlR1XIgfIarHhUX/GBB4OBnXGAL622EguiAoPyNwagxHb+xn7ypJ/rF4pHYD7XRydH93ZhZVHDGstMVcpB9cYSQSCTsd2UEmmywsPaJxQB/Jwy4L109tNawSLqHZDdb5DxG1MdhYpnwetKuwObhdcCmO49iTmBuNo+CPYx3swO4YLq0kLoz9jO9e1iIRhV8qCal90Vc+3ojZdDTnnTHi9X689ZPW0bcz1cI4khmylrSrhV6fta2cXumqCSPufKR1lSvu2ZABz5yhSEH7mVmjLtoDC6ymGNYaxVd5pSyWc7Hdj+fjhwwctjFoLOLm1ZFtNY6NY4HSl/euzDxj0Qkux+/VQaJABkK7RNVTCo3oQWdry11jp5EcLYwAy6GlKPpW7P0RobFf9uNR1Hp1cMYC0p0o4ubXzdm3UD0vAdt/yhQsS99KPTlvgXLZ5ge/y/P//KOdH7L8AAAD//1ERtUumBwAA"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.cloud_init_config": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "f78ea4f7880ab702c5bbb52b88cece1ba1347baab48883fd3982ea0646b1a06a",
                        "attributes": {
                            "id": "f78ea4f7880ab702c5bbb52b88cece1ba1347baab48883fd3982ea0646b1a06a",
                            "rendered": "#cloud-config\n#\nwrite_files:\n- encoding: gz+b64\n  content: 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\n  owner: root:root\n  path: /tmp/calico.yaml\n  permissions: '0664'",
                            "template": "#cloud-config\n#\nwrite_files:\n- encoding: gz+b64\n  content: ${calico_yaml}\n  owner: root:root\n  path: /tmp/calico.yaml\n  permissions: '0664'",
                            "vars.%": "1",
                            "vars.calico_yaml": "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"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.init_master": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_eip.master",
                        "module.kubeadm-token"
                    ],
                    "primary": {
                        "id": "a858fcdb3ebb9052c48905a1a2cd2ade2451b8be71f3441313ee1a1b514a0ea5",
                        "attributes": {
                            "id": "a858fcdb3ebb9052c48905a1a2cd2ade2451b8be71f3441313ee1a1b514a0ea5",
                            "rendered": "#!/bin/bash\n\nexec \u0026\u003e /var/log/init-aws-kubernetes-master.log\n\nset -o verbose\nset -o errexit\nset -o pipefail\n\n\nexport KUBEADM_TOKEN=y0r9tf.lq8vupwhgrkfnb0t\n\nexport IP_ADDRESS=$(ifconfig -a eth0 | grep -e \"inet addr\" | awk -F\":\" '{print $2}' | awk -F\" \" '{print $1}')\nexport KUBERNETES_VERSION=\"1.15.0\"\n\n# Set this only after setting the defaults\nset -o nounset\n\n# We needed to match the hostname expected by kubeadm an the hostname used by kubelet\nFULL_HOSTNAME=\"$(curl -s http://169.254.169.254/latest/meta-data/hostname)\"\n\n# Make DNS lowercase\n##DNS_NAME=$(echo \"$DNS_NAME\" | tr 'A-Z' 'a-z')\n\ncurl -fsSL https://get.docker.com | bash\n\napt-get update \u0026\u0026 apt-get install -y apt-transport-https\n\napt-get install bash-completion -y\n\ncurl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\n\necho \"deb http://apt.kubernetes.io/ kubernetes-xenial main\" \u003e /etc/apt/sources.list.d/kubernetes.list\n\napt-get update \u0026\u0026 apt-get install -y kubelet kubeadm kubectl\n\n# Fix kubelet configuration\ncat \u003e /etc/docker/daemon.json \u003c\u003cEOF\n{\n  \"exec-opts\": [\"native.cgroupdriver=systemd\"],\n  \"log-driver\": \"json-file\",\n  \"log-opts\": {\n    \"max-size\": \"100m\"\n  },\n  \"storage-driver\": \"overlay2\"\n}\nEOF\n\nmkdir -p /etc/systemd/system/docker.service.d\n\n# Restart docker.\nsystemctl daemon-reload\nsystemctl restart docker\n\n\n# Set settings needed by Docker\nsysctl net.bridge.bridge-nf-call-iptables=1\nsysctl net.bridge.bridge-nf-call-ip6tables=1\n\n# Initialize the master\ncat \u003e/tmp/kubeadm.yaml \u003c\u003cEOF\n---\napiVersion: kubeadm.k8s.io/v1beta1\nkind: InitConfiguration\nbootstrapTokens:\n- groups:\n  - system:bootstrappers:kubeadm:default-node-token\n  token: $KUBEADM_TOKEN\n  ttl: 0s\n  usages:\n  - signing\n  - authentication\nnodeRegistration:\n  criSocket: /var/run/dockershim.sock\n  name: $FULL_HOSTNAME\n  taints:\n  - effect: NoSchedule\n    key: node-role.kubernetes.io/master\n---\napiVersion: kubeadm.k8s.io/v1beta1\nkind: ClusterConfiguration\napiServer:\n  certSANs:\n  - $IP_ADDRESS\n  timeoutForControlPlane: 5m0s\ncertificatesDir: /etc/kubernetes/pki\nclusterName: kubernetes\ndns:\n  type: CoreDNS\netcd:\n  local:\n    dataDir: /var/lib/etcd\nimageRepository: k8s.gcr.io\nkubernetesVersion: v$KUBERNETES_VERSION\nnetworking:\n  dnsDomain: cluster.local\n  podSubnet: \"\"\n  serviceSubnet: 10.96.0.0/12\n\nEOF\n\nkubeadm reset --force\nkubeadm init --config /tmp/kubeadm.yaml\n\n# Use the local kubectl config for further kubectl operations\n\nexport KUBECONFIG=/etc/kubernetes/admin.conf\n\n# Install calico\nkubectl apply -f /tmp/calico.yaml\n\n# Configure kubectl\nmkdir -p /root/.kube\nsudo cp -i /etc/kubernetes/admin.conf /root/.kube/config\nsudo chown $(id -u):$(id -g) /root/.kube/config\n\nkubectl completion bash \u003e/etc/bash_completion.d/kubectl\n\n# Allow the user to administer the cluster\nkubectl create clusterrolebinding admin-cluster-binding --clusterrole=cluster-admin --user=admin\n\n# Prepare the kubectl config file for download to client (IP address)\nexport KUBECONFIG_OUTPUT=/root/kubeconfig_ip\nkubeadm alpha kubeconfig user \\\n  --client-name admin \\\n  --apiserver-advertise-address $IP_ADDRESS \\\n  \u003e $KUBECONFIG_OUTPUT\nchown $(id -u):$(id -g) $KUBECONFIG_OUTPUT\nchmod 0600 $KUBECONFIG_OUTPUT\n\ncp /root/kubeconfig_ip /root/kubeconfig\nsed -i \"s/server: https:\\/\\/$IP_ADDRESS:6443/server: https:\\/\\/$IP_ADDRESS:6443/g\" /root/kubeconfig\nchown $(id -u):$(id -g) /root/kubeconfig\nchmod 0600 /root/kubeconfig\n",
                            "template": "#!/bin/bash\n\nexec \u0026\u003e /var/log/init-aws-kubernetes-master.log\n\nset -o verbose\nset -o errexit\nset -o pipefail\n\n\nexport KUBEADM_TOKEN=${kubeadm_token}\nexport IP_ADDRESS=$(ifconfig -a eth0 | grep -e \"inet addr\" | awk -F\":\" '{print $2}' | awk -F\" \" '{print $1}')\nexport KUBERNETES_VERSION=\"1.15.0\"\n\n# Set this only after setting the defaults\nset -o nounset\n\n# We needed to match the hostname expected by kubeadm an the hostname used by kubelet\nFULL_HOSTNAME=\"$(curl -s http://169.254.169.254/latest/meta-data/hostname)\"\n\n# Make DNS lowercase\n##DNS_NAME=$(echo \"$DNS_NAME\" | tr 'A-Z' 'a-z')\n\ncurl -fsSL https://get.docker.com | bash\n\napt-get update \u0026\u0026 apt-get install -y apt-transport-https\n\napt-get install bash-completion -y\n\ncurl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\n\necho \"deb http://apt.kubernetes.io/ kubernetes-xenial main\" \u003e /etc/apt/sources.list.d/kubernetes.list\n\napt-get update \u0026\u0026 apt-get install -y kubelet kubeadm kubectl\n\n# Fix kubelet configuration\ncat \u003e /etc/docker/daemon.json \u003c\u003cEOF\n{\n  \"exec-opts\": [\"native.cgroupdriver=systemd\"],\n  \"log-driver\": \"json-file\",\n  \"log-opts\": {\n    \"max-size\": \"100m\"\n  },\n  \"storage-driver\": \"overlay2\"\n}\nEOF\n\nmkdir -p /etc/systemd/system/docker.service.d\n\n# Restart docker.\nsystemctl daemon-reload\nsystemctl restart docker\n\n\n# Set settings needed by Docker\nsysctl net.bridge.bridge-nf-call-iptables=1\nsysctl net.bridge.bridge-nf-call-ip6tables=1\n\n# Initialize the master\ncat \u003e/tmp/kubeadm.yaml \u003c\u003cEOF\n---\napiVersion: kubeadm.k8s.io/v1beta1\nkind: InitConfiguration\nbootstrapTokens:\n- groups:\n  - system:bootstrappers:kubeadm:default-node-token\n  token: $KUBEADM_TOKEN\n  ttl: 0s\n  usages:\n  - signing\n  - authentication\nnodeRegistration:\n  criSocket: /var/run/dockershim.sock\n  name: $FULL_HOSTNAME\n  taints:\n  - effect: NoSchedule\n    key: node-role.kubernetes.io/master\n---\napiVersion: kubeadm.k8s.io/v1beta1\nkind: ClusterConfiguration\napiServer:\n  certSANs:\n  - $IP_ADDRESS\n  timeoutForControlPlane: 5m0s\ncertificatesDir: /etc/kubernetes/pki\nclusterName: kubernetes\ndns:\n  type: CoreDNS\netcd:\n  local:\n    dataDir: /var/lib/etcd\nimageRepository: k8s.gcr.io\nkubernetesVersion: v$KUBERNETES_VERSION\nnetworking:\n  dnsDomain: cluster.local\n  podSubnet: \"\"\n  serviceSubnet: 10.96.0.0/12\n\nEOF\n\nkubeadm reset --force\nkubeadm init --config /tmp/kubeadm.yaml\n\n# Use the local kubectl config for further kubectl operations\n\nexport KUBECONFIG=/etc/kubernetes/admin.conf\n\n# Install calico\nkubectl apply -f /tmp/calico.yaml\n\n# Configure kubectl\nmkdir -p /root/.kube\nsudo cp -i /etc/kubernetes/admin.conf /root/.kube/config\nsudo chown $(id -u):$(id -g) /root/.kube/config\n\nkubectl completion bash \u003e/etc/bash_completion.d/kubectl\n\n# Allow the user to administer the cluster\nkubectl create clusterrolebinding admin-cluster-binding --clusterrole=cluster-admin --user=admin\n\n# Prepare the kubectl config file for download to client (IP address)\nexport KUBECONFIG_OUTPUT=/root/kubeconfig_ip\nkubeadm alpha kubeconfig user \\\n  --client-name admin \\\n  --apiserver-advertise-address $IP_ADDRESS \\\n  \u003e $KUBECONFIG_OUTPUT\nchown $(id -u):$(id -g) $KUBECONFIG_OUTPUT\nchmod 0600 $KUBECONFIG_OUTPUT\n\ncp /root/kubeconfig_ip /root/kubeconfig\nsed -i \"s/server: https:\\/\\/$IP_ADDRESS:6443/server: https:\\/\\/$IP_ADDRESS:6443/g\" /root/kubeconfig\nchown $(id -u):$(id -g) /root/kubeconfig\nchmod 0600 /root/kubeconfig\n",
                            "vars.%": "3",
                            "vars.dns_name": "ledivan.oi",
                            "vars.ip_address": "18.228.255.140",
                            "vars.kubeadm_token": "y0r9tf.lq8vupwhgrkfnb0t\n"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.init_node": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_eip.master",
                        "aws_instance.master",
                        "module.kubeadm-token"
                    ],
                    "primary": {
                        "id": "370a08de4d8a6006be59d7366d0284e759a62e2bb95e221035edc83bfa8199e5",
                        "attributes": {
                            "id": "370a08de4d8a6006be59d7366d0284e759a62e2bb95e221035edc83bfa8199e5",
                            "rendered": "#!/bin/bash\n\nexec \u0026\u003e /var/log/init-aws-kubernetes-node.log\n\nset -o verbose\nset -o errexit\nset -o pipefail\n\nexport KUBEADM_TOKEN=y0r9tf.lq8vupwhgrkfnb0t\n\nexport MASTER_IP=172.31.31.90\nexport KUBERNETES_VERSION=\"1.15.0\"\n\n# Set this only after setting the defaults\nset -o nounset\n\n# We to match the hostname expected by kubeadm an the hostname used by kubelet\nFULL_HOSTNAME=\"$(curl -s http://169.254.169.254/latest/meta-data/hostname)\"\n\n# Make DNS lowercase\n##DNS_NAME=$(echo \"$DNS_NAME\" | tr 'A-Z' 'a-z')\n\ncurl -fsSL https://get.docker.com | bash\n\napt-get update \u0026\u0026 apt-get install -y apt-transport-https\n\ncurl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\n\necho \"deb http://apt.kubernetes.io/ kubernetes-xenial main\" \u003e /etc/apt/sources.list.d/kubernetes.list\n\napt-get update \u0026\u0026 apt-get install -y kubelet kubeadm kubectl\n\n# Setup daemon.\ncat \u003e /etc/docker/daemon.json \u003c\u003cEOF\n{\n  \"exec-opts\": [\"native.cgroupdriver=systemd\"],\n  \"log-driver\": \"json-file\",\n  \"log-opts\": {\n    \"max-size\": \"100m\"\n  },\n  \"storage-driver\": \"overlay2\"\n}\nEOF\n\nmkdir -p /etc/systemd/system/docker.service.d\n\n# Restart docker.\nsystemctl daemon-reload\nsystemctl restart docker\n\n\n# Set settings needed by Docker\nsysctl net.bridge.bridge-nf-call-iptables=1\nsysctl net.bridge.bridge-nf-call-ip6tables=1\n\n# Initialize the master\ncat \u003e/tmp/kubeadm.yaml \u003c\u003cEOF\n---\napiVersion: kubeadm.k8s.io/v1beta1\nkind: JoinConfiguration\ndiscovery:\n  bootstrapToken:\n    apiServerEndpoint: $MASTER_IP:6443\n    token: $KUBEADM_TOKEN\n    unsafeSkipCAVerification: true\n  timeout: 5m0s\nnodeRegistration:\n  criSocket: /var/run/dockershim.sock\n  name: $FULL_HOSTNAME\nEOF\n\nkubeadm reset --force\nkubeadm join --config /tmp/kubeadm.yaml",
                            "template": "#!/bin/bash\n\nexec \u0026\u003e /var/log/init-aws-kubernetes-node.log\n\nset -o verbose\nset -o errexit\nset -o pipefail\n\nexport KUBEADM_TOKEN=${kubeadm_token}\nexport MASTER_IP=${master_private_ip}\nexport KUBERNETES_VERSION=\"1.15.0\"\n\n# Set this only after setting the defaults\nset -o nounset\n\n# We to match the hostname expected by kubeadm an the hostname used by kubelet\nFULL_HOSTNAME=\"$(curl -s http://169.254.169.254/latest/meta-data/hostname)\"\n\n# Make DNS lowercase\n##DNS_NAME=$(echo \"$DNS_NAME\" | tr 'A-Z' 'a-z')\n\ncurl -fsSL https://get.docker.com | bash\n\napt-get update \u0026\u0026 apt-get install -y apt-transport-https\n\ncurl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\n\necho \"deb http://apt.kubernetes.io/ kubernetes-xenial main\" \u003e /etc/apt/sources.list.d/kubernetes.list\n\napt-get update \u0026\u0026 apt-get install -y kubelet kubeadm kubectl\n\n# Setup daemon.\ncat \u003e /etc/docker/daemon.json \u003c\u003cEOF\n{\n  \"exec-opts\": [\"native.cgroupdriver=systemd\"],\n  \"log-driver\": \"json-file\",\n  \"log-opts\": {\n    \"max-size\": \"100m\"\n  },\n  \"storage-driver\": \"overlay2\"\n}\nEOF\n\nmkdir -p /etc/systemd/system/docker.service.d\n\n# Restart docker.\nsystemctl daemon-reload\nsystemctl restart docker\n\n\n# Set settings needed by Docker\nsysctl net.bridge.bridge-nf-call-iptables=1\nsysctl net.bridge.bridge-nf-call-ip6tables=1\n\n# Initialize the master\ncat \u003e/tmp/kubeadm.yaml \u003c\u003cEOF\n---\napiVersion: kubeadm.k8s.io/v1beta1\nkind: JoinConfiguration\ndiscovery:\n  bootstrapToken:\n    apiServerEndpoint: $MASTER_IP:6443\n    token: $KUBEADM_TOKEN\n    unsafeSkipCAVerification: true\n  timeout: 5m0s\nnodeRegistration:\n  criSocket: /var/run/dockershim.sock\n  name: $FULL_HOSTNAME\nEOF\n\nkubeadm reset --force\nkubeadm join --config /tmp/kubeadm.yaml",
                            "vars.%": "3",
                            "vars.kubeadm_token": "y0r9tf.lq8vupwhgrkfnb0t\n",
                            "vars.master_ip": "18.228.255.140",
                            "vars.master_private_ip": "172.31.31.90"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "kubeadm-token"
            ],
            "outputs": {
                "token": {
                    "sensitive": false,
                    "type": "string",
                    "value": "y0r9tf.lq8vupwhgrkfnb0t\n"
                }
            },
            "resources": {
                "data.template_file.kubeadm_token": {
                    "type": "template_file",
                    "depends_on": [
                        "random_shuffle.token1",
                        "random_shuffle.token2"
                    ],
                    "primary": {
                        "id": "2c5233e6c9ec6648aea69e4c377c39e47da4108821945868f838294739bedd14",
                        "attributes": {
                            "id": "2c5233e6c9ec6648aea69e4c377c39e47da4108821945868f838294739bedd14",
                            "rendered": "y0r9tf.lq8vupwhgrkfnb0t\n",
                            "template": "${token1}.${token2}\n",
                            "vars.%": "2",
                            "vars.token1": "y0r9tf",
                            "vars.token2": "lq8vupwhgrkfnb0t"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "random_shuffle.token1": {
                    "type": "random_shuffle",
                    "depends_on": [],
                    "primary": {
                        "id": "-",
                        "attributes": {
                            "id": "-",
                            "input.#": "37",
                            "input.0": "1",
                            "input.1": "2",
                            "input.10": "a",
                            "input.11": "b",
                            "input.12": "c",
                            "input.13": "d",
                            "input.14": "e",
                            "input.15": "f",
                            "input.16": "g",
                            "input.17": "h",
                            "input.18": "i",
                            "input.19": "t",
                            "input.2": "3",
                            "input.20": "j",
                            "input.21": "k",
                            "input.22": "l",
                            "input.23": "m",
                            "input.24": "n",
                            "input.25": "o",
                            "input.26": "p",
                            "input.27": "q",
                            "input.28": "r",
                            "input.29": "s",
                            "input.3": "4",
                            "input.30": "t",
                            "input.31": "u",
                            "input.32": "v",
                            "input.33": "w",
                            "input.34": "x",
                            "input.35": "y",
                            "input.36": "z",
                            "input.4": "5",
                            "input.5": "6",
                            "input.6": "7",
                            "input.7": "8",
                            "input.8": "9",
                            "input.9": "0",
                            "result.#": "6",
                            "result.0": "y",
                            "result.1": "0",
                            "result.2": "r",
                            "result.3": "9",
                            "result.4": "t",
                            "result.5": "f",
                            "result_count": "6"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.random"
                },
                "random_shuffle.token2": {
                    "type": "random_shuffle",
                    "depends_on": [],
                    "primary": {
                        "id": "-",
                        "attributes": {
                            "id": "-",
                            "input.#": "37",
                            "input.0": "1",
                            "input.1": "2",
                            "input.10": "a",
                            "input.11": "b",
                            "input.12": "c",
                            "input.13": "d",
                            "input.14": "e",
                            "input.15": "f",
                            "input.16": "g",
                            "input.17": "h",
                            "input.18": "i",
                            "input.19": "t",
                            "input.2": "3",
                            "input.20": "j",
                            "input.21": "k",
                            "input.22": "l",
                            "input.23": "m",
                            "input.24": "n",
                            "input.25": "o",
                            "input.26": "p",
                            "input.27": "q",
                            "input.28": "r",
                            "input.29": "s",
                            "input.3": "4",
                            "input.30": "t",
                            "input.31": "u",
                            "input.32": "v",
                            "input.33": "w",
                            "input.34": "x",
                            "input.35": "y",
                            "input.36": "z",
                            "input.4": "5",
                            "input.5": "6",
                            "input.6": "7",
                            "input.7": "8",
                            "input.8": "9",
                            "input.9": "0",
                            "result.#": "16",
                            "result.0": "l",
                            "result.1": "q",
                            "result.10": "k",
                            "result.11": "f",
                            "result.12": "n",
                            "result.13": "b",
                            "result.14": "0",
                            "result.15": "t",
                            "result.2": "8",
                            "result.3": "v",
                            "result.4": "u",
                            "result.5": "p",
                            "result.6": "w",
                            "result.7": "h",
                            "result.8": "g",
                            "result.9": "r",
                            "result_count": "16"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.random"
                }
            },
            "depends_on": []
        }
    ]
}
